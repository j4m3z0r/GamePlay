#EMCC_FLAGS:=-s FULL_ES2=1 -g -O1 -D_DEBUG --jcache 
#EMCC_FLAGS:=-O0 -D_DEBUG --jcache -s GL_DEBUG=1 -s GL_UNSAFE_OPTS=0
#EMCC_FLAGS:=-O0 -D_DEBUG --jcache -s GL_UNSAFE_OPTS=0
#EMCC_FLAGS:=-O0 --jcache -s GL_UNSAFE_OPTS=0
EMCC_FLAGS:=-O1 --jcache -s GL_UNSAFE_OPTS=0

EMCC:=externals/emscripten/emcc

SAMPLES := \
	gameplay-samples/sample04-particles/dist/index.html

all: $(SAMPLES)

INTERMEDIATE_OBJECTS := \
	externals/libbullet.bc \
	externals/liblua.bc \
	externals/libz.bc \
	externals/libpng.bc \
	externals/libfakeal.bc \
	gameplay/libgameplay.bc \
	gameplay/libgphacked.bc

externals/libbullet.bc:
	make -C externals -f EMMakefile libbullet.bc -j 4

externals/liblua.bc:
	make -C externals -f EMMakefile liblua.bc -j 4

externals/libz.bc:
	make -C externals -f EMMakefile libz.bc -j 4

externals/libpng.bc:
	make -C externals -f EMMakefile libpng.bc -j 4

externals/libfakeal.bc:
	make -C externals -f EMMakefile libfakeal.bc -j 4

gameplay/libgameplay.bc:
	make -C gameplay -f EMMakefile libgameplay.bc -j 4

gameplay/libgphacked.bc:
	make -C gameplay -f EMMakefile libgphacked.bc -j 4

clean:
	make -C externals -f EMMakefile clean
	make -C gameplay -f EMMakefile clean
	rm -rf gameplay-samples/sample04-particles/dist

.PHONY: $(INTERMEDIATE_OBJECTS) clean gameplay-samples/sample04-particles/dist/index.data

# XXX: Build samples from toplevel makefile for now, as this has the paths to
# all the libs that need to be linked in. Structure for all these is that there
# is a step to package up all the files that the app needs at runtime, and a
# step to compile the app and link in all the libraries.
gameplay-samples/sample04-particles/dist/index.data:
	(cd gameplay-samples/sample04-particles; \
    mkdir -p dist; \
    python ../../externals/emscripten/tools/file_packager.py index.data --preload res --pre-run > dist/preload.js; \
    mv index.data dist)

gameplay-samples/sample04-particles/dist/index.html: $(INTERMEDIATE_OBJECTS) gameplay-samples/sample04-particles/src/ParticlesGame.cpp gameplay-samples/sample04-particles/dist/index.data
	mkdir -p gameplay-samples/sample04-particles/dist
	$(EMCC) $(EMCC_FLAGS) \
		-o gameplay-samples/sample04-particles/dist/index.html \
		--pre-js gameplay-samples/sample04-particles/dist/preload.js \
		-Iexternals/libpng-1.4.8/ \
		-Iexternals/lua-5.2.1/src/ \
		-Igameplay/src \
		-Iexternals/bullet-2.81-rev2613/src \
		-Iexternals/fakeogg/ \
		-Iexternal-deps/oggvorbis/include/ \
		-Iexternals/emscripten/system/include/ \
		gameplay-samples/sample04-particles/src/ParticlesGame.cpp \
		$(INTERMEDIATE_OBJECTS)
	# Hack to set the canvas to the appropriate size.
	perl -i -pe 's/id="canvas"/width="800" height="600" id="canvas"/' gameplay-samples/sample04-particles/dist/index.html

